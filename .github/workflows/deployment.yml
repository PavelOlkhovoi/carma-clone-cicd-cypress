name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    outputs:
      has_e2e: ${{ steps.check_e2e.outputs.has_e2e }}
      e2e_projects: ${{ steps.check_e2e.outputs.e2e_projects }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: "recursive"

      - name: Update Submodules
        run: git submodule update --remote --recursive

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm install

      - name: Install nx globally
        run: npm install -g nx

      - name: Get affected projects
        id: affected
        run: |
          AFFECTED_PROJECTS=$(npx nx print-affected --base=origin/main~1 --head=HEAD --select=projects)
          echo "affected_projects=$AFFECTED_PROJECTS" >> $GITHUB_OUTPUT

      - name: Check for e2e tests
        id: check_e2e
        run: |
          AFFECTED_ARRAY=(${{ steps.affected.outputs.affected_projects }})
          E2E_PROJECTS=()
          
          for project in "${AFFECTED_ARRAY[@]}"
          do
            # Check if corresponding e2e project exists (following e2e-* pattern)
            if [ -d "e2e/e2e-$project" ]; then
              E2E_PROJECTS+=("e2e-$project")
            fi
          done
          
          if [ ${#E2E_PROJECTS[@]} -gt 0 ]; then
            echo "has_e2e=true" >> $GITHUB_OUTPUT
            # Convert array to JSON array for matrix
            JSON_ARRAY=$(printf '%s\n' "${E2E_PROJECTS[@]}" | jq -R . | jq -s .)
            echo "e2e_projects=$JSON_ARRAY" >> $GITHUB_OUTPUT
          else
            echo "has_e2e=false" >> $GITHUB_OUTPUT
            echo "e2e_projects=[]" >> $GITHUB_OUTPUT
          fi

  e2e-tests:
    needs: deploy
    if: needs.deploy.outputs.has_e2e == 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: ${{ fromJson(needs.deploy.outputs.e2e_projects) }}
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: "recursive"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm install

      - name: Install nx globally
        run: npm install -g nx

      - name: Run e2e test
        run: |
          echo "Running e2e tests for ${{ matrix.project }}"
          npx nx run ${{ matrix.project }}:e2e --skip-nx-cache